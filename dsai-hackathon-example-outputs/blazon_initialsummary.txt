In this video, the co-president of DSAI, Mark, along with Ray and Jennifer, discuss the upcoming DSAI ChatGPT hackathon and introduce Blazon, a startup that provides two types of services, including a no-code development platform where users can create automated workflows by dragging and dropping boxes. Ray explains how he came to know about Blazon through his AI content updates on LinkedIn, TikTok, and YouTube. Mark then shares the Blazon website and demonstrates the API key and central console dashboard where users can manage their credits and access documentation. Jesse from Blazon joins the conversation and provides more information about the startup and its services.

In this section of the DSAI hackathon YouTube video, the hosts are joined by Jesse from Blazon, a startup that builds safe and trusted software components on top of large language models. Jesse explains that Blazon has two main tools: Blazon capabilities and multi-flow. Blazon capabilities is a software package combined with an API with prepackaged components and capabilities that work out of the box, making it easy for developers to integrate into their code base with zero friction. Multi-flow is a low code workflow building tool that is more friendly for people with less of a technical or software engineering background. The hosts express their excitement for the upcoming hackathon and Jesse shares his screen to give a demo of Blazon's capabilities.

In this section of the DSAI hackathon video, Jesse walks the audience through the capabilities currently available through the API. The flagship capability is structured synthesis, which solves the problem of parsing structured data from unstructured input. Jesse provides an example of how this could be used to convert a financial document into a spreadsheet or extract a list of action items from incoming emails. The structured inputs and outputs are specified through Pydantic classes in the Python SDK. Jesse then demonstrates how this capability can be implemented as an instance of the structured synthesis capability, which can be invoked through URI or by using the LLM decorator. He shows an example of how to implement a translation function with a list of word-level translations. Jesse also mentions that the LLM functions can be used to provide arbitrary Pydantic data classes as output types, and he provides an example of creating bullet-pointed summaries of text.

In this section of the DSAI hackathon, the speaker demonstrates an example of an LLM function that uses structured parsing of an English sentence to extract financial metrics from an unstructured input passage. The function is designed to extract a table of financial metrics, with each row having the format of metric name, metric value, and supporting passage. The speaker provides an example of an earnings call snippet from NVIDIA's Q4 2022 earnings report, and shows how the function can extract the relevant financial metrics from the input passage. The output of the function is a full Python object, which can be manipulated later. The speaker notes that this type of function is much easier to write than using regex, and allows for instructions to be written in natural language, while letting the AGI behind the API do a lot of the work.

In this section of the DSAI hackathon video, the speaker discusses the new plugins available, specifically the code interpreter plugin that allows users to type in data and create charts within the chat. This represents a shift in how knowledge work is done, with more automation powered by natural language. The speaker also introduces the capabilities API, which can extract metrics from a long list of files in just five minutes, compressing a whole day's work into a short time frame. The API is easy to use and works out of the box, with support for Python and TypeScript. The speaker also mentions a special offer for early users of the API, with 100,000 API calls per month for free. The video ends with instructions on how to access the capabilities API and sign up for the offer.

In this section of the DSAI hackathon YouTube video, Jesse talks about the licensing and payment structure for Capabilities, which is completely open-source and has an API backend. He also mentions that the product is currently free with a usage cap of 100,000 API requests per month and they are keen to get feedback from builders. Later in the video, Jesse demonstrates a more complex demo of Capabilities by building a research tool that helps users become an expert on a topic of their choosing. The tool involves brainstorming auxiliary topics, gathering information from relevant Wikipedia pages, and downloading all the pages to spin up a Q&A system that uses a vector database. Jesse also explains how Capabilities abstracts away the pain of prompt engineering and takes care of all the messy prompting. Overall, the video showcases the powerful capabilities of Capabilities and its potential for various use cases.

In this section, the speakers discuss how to come up with a master plan for learning about a topic, specifically nuclear fusion. They suggest using a curriculum to brainstorm topics and questions, and then gathering information from relevant Wikipedia pages using a search function. They also mention the importance of versioning and being able to backtrack and see previous versions of a prompt when building AI applications. The speakers then introduce the concept of vector search and explain how it can be used to create a database of URLs and perform question answering. They demonstrate how to use the search abstractions library within capabilities to implement this functionality.

This is section 8 of a YouTube video for the DSAI hackathon. In this section, the speaker discusses the process of creating a search index for a subset of Wikipedia and using it for question answering. They explain that the search index is the heart of a vector database and is powered by an embedding model that can produce vector representations of documents. The process involves gathering a list of URLs, creating a search index, and then using a while loop to pose a query against the search index and get back a list of results. The results are then processed using Blazon's document QA capability to provide a final answer. The speaker demonstrates this process and shows how it can be used for private question answering over a special subset of Wikipedia stored as a private search engine on a computer. They suggest that this process can be applied to various use cases, such as mergers and acquisitions deals or analyzing publicly filed reports with the SEC.

In this section of the DSAI hackathon YouTube video, the speakers discuss potential use cases for their technology, which is focused on language processing and question answering. They mention industries such as finance and law, as well as personal use cases. The speakers also mention the hackathon and the criteria for submissions, emphasizing the importance of having a business use case. They then discuss the timer countdown on the screen, which is processing information into a vector database. The speakers mention that they have mostly spoken to developers who are interested in building systems that can process large volumes of documents. They also discuss potential use cases in education, such as using the technology as a personal tutor or teaching assistant. Overall, the speakers emphasize that the field is wide open and that their technology has many potential applications.

In this section of the DSAI hackathon YouTube video, the speakers discuss the limitations of AI detection tools and the importance of verifying the correctness of outputs. They demonstrate their document question answering endpoint, which provides relevant and supported passages in response to a question. The supporting passages are a crucial feature that is often missing in out-of-the-box models. The speakers emphasize the power of their capabilities and encourage viewers to download and use them for their research. They also provide contact information for those who want to learn more. The video ends with a thank you to the speakers and a promise to share the recording on YouTube.